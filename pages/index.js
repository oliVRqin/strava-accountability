import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react';
import Logo from '../public/logo.ico'

import Legend from '../components/legend'
import Grids from '../components/grids'
import ClickedWorkoutCardLight from '../components/clickedWorkoutCardLight'
import ClickedWorkoutCardDark from '../components/clickedWorkoutCardDark'
import WorkoutCardsLight from '../components/workoutCardsLight'
import WorkoutCardsDark from '../components/workoutCardsDark'

export default function Home() {
  const [activityData, setActivityData] = useState([]);
  const [displayClickedWorkout, setDisplayClickedWorkout] = useState(false);
  const [displayGrid, setDisplayGrid] = useState(true);
  const [clickedDate, setClickedDate] = useState(null);
  const [numWorkouts, setNumWorkouts] = useState(0);
  const [isDark, setIsDark] = useState(false);
  const [ifEverClick, setIfEverClick] = useState(false);

  useEffect(() => {
      async function fetchAPI() {
          const post_url = `https://www.strava.com/api/v3/oauth/token?client_id=${process.env.NEXT_PUBLIC_CLIENT_ID}&client_secret=${process.env.NEXT_PUBLIC_CLIENT_SECRET}&grant_type=refresh_token&refresh_token=${process.env.NEXT_PUBLIC_REFRESH_TOKEN}`
          const post_response = await fetch(post_url, { method: "POST" })
          const post_data = await post_response.json();
          const url = `${process.env.NEXT_PUBLIC_URL}?per_page=200&access_token=${post_data.access_token}`;
          const response = await fetch(url);
          const data = await response.json();
          setActivityData(data);
      }
      fetchAPI();
  }, [])

  useEffect(() => {
    if (isDark) {
      document.body.style.background = "black";
      document.body.style.color = "beige";
    } else {
      document.body.style.background = "white";
      document.body.style.color = "black";
    }
  })

  useEffect(() => {
    window.onresize = () => {
      setDisplayGrid(window.innerWidth > 830 ? true : false)
    }
    setDisplayGrid(window.innerWidth > 830 ? true : false)
  })

  return (
    <div className={styles.container}>
      <Head>
        <title>Strava API Workout Visualizer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href={Logo} />
      </Head>
      <main className={styles.main}>
        <label className={styles.switch}>
          <input type="checkbox" />
          <span onClick={() => {setIsDark(!isDark)}} className={styles.slider}></span>
        </label>
        <br></br>
        <h1 className={styles.title}>Strava API Workout Visualizer</h1>
        {
          displayGrid ? 
            <>
              <p className={styles.description}>
                <b>{numWorkouts}</b> workouts in the past year
              </p>
              <Grids 
                data={activityData} 
                numWorkouts={setNumWorkouts} 
                displayClickedWorkout={setDisplayClickedWorkout} 
                clickedDate={setClickedDate} 
                ifEverClick={setIfEverClick}
              />
              <Legend />
              {
                displayClickedWorkout ? 
                  isDark ?
                    <ClickedWorkoutCardDark 
                      data={activityData} 
                      clickedDate={clickedDate} 
                    />
                  :
                    <ClickedWorkoutCardLight 
                      data={activityData} 
                      clickedDate={clickedDate} 
                    />
                :
                  ifEverClick ?
                    <div className={styles.clickedCard}>
                      <p>
                        <b className={styles.workoutDate}>{clickedDate}</b>
                      </p>
                      <p>No workout on this day!</p>
                    </div>
                  :
                    <p className={styles.description}>
                      Click on a <b>square</b> to see what workout I did on that specific day!
                    </p>
              }
            </>
          : 
            <>
                {
                  isDark ?
                    <WorkoutCardsDark data={activityData} />
                  :
                    <WorkoutCardsLight data={activityData} />
                }
            </>
        }
      </main>
    </div>
  )
}
